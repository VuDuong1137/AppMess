//
//  MainRegisterViewController.swift
//  APPMesenger
//
//  Created by D∆∞∆°ng ch√£ng on 6/6/20.
//  Copyright ¬© 2020 macshop. All rights reserved.
//

import UIKit
import Firebase

let storage = Storage.storage()
let storageRef = storage.reference(forURL: "gs://appmes-aa1ab.appspot.com")

class MainRegisterViewController: UIViewController {
    
    
    let Viewbig : UIView = {
        let View = UIView()
        View.translatesAutoresizingMaskIntoConstraints = false
        //View.backgroundColor = #colorLiteral(red: 0, green: 0.9914394021, blue: 1, alpha: 1)
        return View
    }()
    let imge1 : UIImageView = {
        let imge = UIImageView()
        imge.image = UIImage(named: "email")
        imge.translatesAutoresizingMaskIntoConstraints = false
        return imge
    }()
    
    let textField :  UITextField = {
        let text = UITextField()
        text.backgroundColor = .white
        text.textColor = .black
        text.translatesAutoresizingMaskIntoConstraints = false
        text.placeholder = "‚úâÔ∏è Your Gmail"
        text.tintColor = .red
        text.textAlignment = .center
        text.alpha = 0.4
        
        text.layer.cornerRadius = 20
        text.layer.borderColor = UIColor.orange.cgColor
        text.layer.borderWidth = 2
        return text
    }()
    let textField1 :  UITextField = {
        let text = UITextField()
        text.backgroundColor = .white
        text.textColor = .black
        text.translatesAutoresizingMaskIntoConstraints = false
        text.placeholder = "üîí Your PassWord"
        text.textAlignment = .center
        text.alpha = 0.4
        
        text.layer.cornerRadius = 20
        text.layer.borderColor = UIColor.orange.cgColor
        text.layer.borderWidth = 2
        return text
    }()
    let textField2 :  UITextField = {
        let text = UITextField()
        text.backgroundColor = .white
        text.textColor = .black
        text.translatesAutoresizingMaskIntoConstraints = false
        text.placeholder = "Bi·ªát Danh"
        text.textAlignment = .center
        text.alpha = 0.4
        
        text.layer.cornerRadius = 20
        text.layer.borderColor = UIColor.orange.cgColor
        text.layer.borderWidth = 2
        return text
    }()
    let textField3 :  UITextField = {
        let text = UITextField()
        text.backgroundColor = .white
        text.textColor = .black
        text.translatesAutoresizingMaskIntoConstraints = false
        text.placeholder = "Full Your Name"
        text.textAlignment = .center
        text.alpha = 0.4
        
        text.layer.cornerRadius = 20
        text.layer.borderColor = UIColor.orange.cgColor
        text.layer.borderWidth = 2
        return text
    }()
    let imge2: UIImageView = {
        let imge = UIImageView()
        imge.image = UIImage(systemName: "person.circle")
        //imge.backgroundColor = .red
        imge.layer.cornerRadius = 90
        imge.layer.borderColor = UIColor.white.cgColor
        imge.layer.borderWidth = 3
        imge.clipsToBounds = true
        imge.translatesAutoresizingMaskIntoConstraints = false
        return imge
    }()
    let btn: UIButton = {
        let btn = UIButton()
        btn.translatesAutoresizingMaskIntoConstraints = false
        btn.setTitle("Ressister", for: .normal)
        btn.titleLabel?.font = UIFont.systemFont(ofSize: 20, weight: .bold)
        btn.backgroundColor = #colorLiteral(red: 0.01545517519, green: 0.6010738015, blue: 0.9934815764, alpha: 1)
        btn.layer.shadowColor = UIColor.white.cgColor
        //btn.layer.shadowRadius = 10
        btn.layer.shadowOpacity = 0.5
        btn.layer.shadowOffset = CGSize(width: 0, height: 7)
        btn.layer.cornerRadius = 15
        
        return btn
    }()
    
    let btn2: UIButton = {
        let btn = UIButton()
        btn.translatesAutoresizingMaskIntoConstraints = false
        btn.setTitle("Login", for: .normal)
        btn.titleLabel?.font = UIFont.systemFont(ofSize: 20, weight: .bold)
        btn.backgroundColor = #colorLiteral(red: 0.01545517519, green: 0.6010738015, blue: 0.9934815764, alpha: 1)
        btn.layer.shadowColor = UIColor.white.cgColor
        //btn.layer.shadowRadius = 10
        btn.layer.shadowOpacity = 0.5
        btn.layer.shadowOffset = CGSize(width: 0, height: 7)
        btn.layer.cornerRadius = 15
        
        return btn
    }()
    
    
    
    var imgDAta: Data!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        let imageview = UIImageView(frame: UIScreen.main.bounds)
        imageview.image = UIImage(named: "129602_original_2000x2521")
        view.insertSubview(imageview, at: 0)
        
        setuplayout()
        imge2.addGestureRecognizer(UITapGestureRecognizer(target: self, action: #selector(handTap)))
        
        // cho ph√©p t√°c ƒë·ªông v·ªõi ·∫£nh c√≤n nh·ªØng c√°i kh√°c ko c·∫ßn
        imge2.isUserInteractionEnabled = true
        
        // ·∫•n n√∫t ƒëƒÉng k√Ω t√†i kho·∫£n tr√™n filebase
        btn.addTarget(self, action: #selector(Tap), for: .touchUpInside)
        btn2.addTarget(self, action: #selector(TapLogin), for: .touchUpInside)
        // n·∫øu ng∆∞·ªõi nh·∫≠p ko ch·ªçn t·∫•m h√¨nh
        // khi app v·ª´a ch·∫°y l√™n
        // th√¨ cho n√≥ m·∫∑c ƒë·ªãnh l√† c√°i h√¨nh
        imgDAta = UIImage.pngData(UIImage(named: "129602_original_2000x2521")!)()
    }
    func setuplayout() {
        view.addSubview(Viewbig)
        Viewbig.topAnchor.constraint(equalTo: view.topAnchor, constant: 80).isActive = true
        Viewbig.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 30).isActive = true
        Viewbig.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -34).isActive = true
        Viewbig.bottomAnchor.constraint(equalTo: view.bottomAnchor, constant: -150).isActive = true
        Viewbig.addSubview(imge1)
        
        imge1.topAnchor.constraint(equalTo: Viewbig.topAnchor, constant: 0).isActive = true
        imge1.centerXAnchor.constraint(equalTo: Viewbig.centerXAnchor).isActive = true
        imge1.heightAnchor.constraint(equalToConstant: 80).isActive = true
        imge1.widthAnchor.constraint(equalToConstant: 80).isActive = true
        Viewbig.addSubview(textField)
        textField.topAnchor.constraint(equalTo: imge1.bottomAnchor, constant: 30).isActive = true
        textField.leadingAnchor.constraint(equalTo: Viewbig.leadingAnchor, constant: 20).isActive = true
        textField.trailingAnchor.constraint(equalTo: Viewbig.trailingAnchor, constant: -20).isActive = true
        textField.heightAnchor.constraint(equalToConstant: 40).isActive = true
        
        Viewbig.addSubview(textField1)
        textField1.topAnchor.constraint(equalTo: textField.bottomAnchor, constant: 30).isActive = true
        textField1.leadingAnchor.constraint(equalTo: Viewbig.leadingAnchor, constant: 20).isActive = true
        textField1.trailingAnchor.constraint(equalTo: Viewbig.trailingAnchor, constant: -20).isActive = true
        textField1.heightAnchor.constraint(equalToConstant: 40).isActive = true
        
        Viewbig.addSubview(textField2)
        textField2.topAnchor.constraint(equalTo: textField1.bottomAnchor, constant: 30).isActive = true
        textField2.leadingAnchor.constraint(equalTo: Viewbig.leadingAnchor, constant: 20).isActive = true
        textField2.trailingAnchor.constraint(equalTo: Viewbig.trailingAnchor, constant: -20).isActive = true
        textField2.heightAnchor.constraint(equalToConstant: 40).isActive = true
        
        Viewbig.addSubview(textField3)
        textField3.topAnchor.constraint(equalTo: textField2.bottomAnchor, constant: 30).isActive = true
        textField3.leadingAnchor.constraint(equalTo: Viewbig.leadingAnchor, constant: 20).isActive = true
        textField3.trailingAnchor.constraint(equalTo: Viewbig.trailingAnchor, constant: -20).isActive = true
        textField3.heightAnchor.constraint(equalToConstant: 40).isActive = true
        
        Viewbig.addSubview(imge2)
        imge2.topAnchor.constraint(equalTo: textField3.bottomAnchor, constant: 30).isActive = true
        imge2.centerXAnchor.constraint(equalTo: Viewbig.centerXAnchor).isActive = true
        imge2.heightAnchor.constraint(equalToConstant: 180).isActive = true
        imge2.widthAnchor.constraint(equalToConstant: 180).isActive = true
        
        
        
        view.addSubview(btn)
        btn.topAnchor.constraint(equalTo: Viewbig.bottomAnchor, constant: 10).isActive = true
        btn.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 40).isActive = true
        btn.bottomAnchor.constraint(equalTo: view.bottomAnchor, constant: -80).isActive = true
        btn.widthAnchor.constraint(equalToConstant: 120).isActive = true
        
        view.addSubview(btn2)
        btn2.topAnchor.constraint(equalTo: Viewbig.bottomAnchor, constant: 10).isActive = true
        btn2.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -40).isActive = true
        btn2.bottomAnchor.constraint(equalTo: view.bottomAnchor, constant: -80).isActive = true
        btn2.widthAnchor.constraint(equalToConstant: 120).isActive = true
    }
    
    @objc func TapLogin()  {
        let vc = LoginViewController()
        vc.modalPresentationStyle = .fullScreen
        present(vc, animated: true, completion: nil)
    }
    
    @objc func handTap(){
        presentPhotoActioSheet()
        //                // cach1-1
        //                print("Tap")
        //                let alert:UIAlertController = UIAlertController(title: "Th√¥ng B√°o", message: "ch·ªçn", preferredStyle: UIAlertController.Style.alert)
        //                //khi ·∫•n v√†o button th√¨ n√≥ s·∫Ω s·∫£y ra h√†nh ƒë·ªông
        //                let alertButonPhotto: UIAlertAction = UIAlertAction(title: "PhoTo", style: UIAlertAction.Style.default) { (UIAlertAction) in
        //
        //                    if (UIImagePickerController.isSourceTypeAvailable(.photoLibrary)){
        //
        //                    // s·ª≠ d·ª•ng uiimgePick ƒë·ªÉ truy c·∫≠p v√†o th∆∞ vi·ªán ·∫£nh
        //                    let imgPickker = UIImagePickerController()
        //                    // truy c·∫≠p v√†o th·ª© vi·ªán ·∫£nh c·ªßa m√°y
        //                    imgPickker.sourceType = .photoLibrary
        //                    // g·∫ßn gi·ªëng nh∆∞ tableview
        //                    imgPickker.delegate = self
        //                    // kh√¥ng cho n√≥ thay ƒë·ªïi t·∫•m h√≠nh
        //                    imgPickker.allowsEditing = false
        //                    self.present(imgPickker,animated: true, completion: nil)
        //                    } else {
        //                        print("NO Photolibarary")
        //                    }
        //                }
        //
        //
        //                let alertButoncamera:UIAlertAction = UIAlertAction(title: "Camera", style: UIAlertAction.Style.default) { (UIAlertAction) in
        //                    // ki·ªÉm tra c√≥ camera hay ko
        //                    // c√≥ th√¨ th·ª±c hi·ªán c√°c h√†nh ƒë·ªông sau
        //
        //                    if (UIImagePickerController.isSourceTypeAvailable(UIImagePickerController.SourceType.camera)) {
        //
        //
        //                    // s·ª≠ d·ª•ng uiimgePick ƒë·ªÉ truy c·∫≠p v√†o th∆∞ vi·ªán ·∫£nh
        //                    let imgPickker = UIImagePickerController()
        //                    // truy c·∫≠p v√†o m√°y ·∫£nh c·ªßa m√°y
        //                    imgPickker.sourceType = .camera
        //                    imgPickker.delegate = self
        //                    // kh√¥ng cho n√≥ thay ƒë·ªïi t·∫•m h√≠nh
        //                    imgPickker.allowsEditing = false
        //                    self.present(imgPickker,animated: true, completion: nil)
        //                    } else {
        //                        print("No Camera")
        //                    }
        //
        //
        //
        //                }
        //                alert.addAction(alertButonPhotto)
        //                alert.addAction(alertButoncamera)
        //
        //                self.present(alert,animated: true,completion: nil)
        
        
    }
    
    @objc func Tap(){
        // b∆∞·ªõc 3
        let email: String = textField.text!
        let passwword: String = textField1.text!
        
        Auth.auth().createUser(withEmail: email, password: passwword) { (Authr, error) in
            // n·∫øu eror == nil c√≥ nghƒ©a l√† ko c√≥ n·ªói th√¨ ch√∫ng ta th·ª±c hi·ªán vi·ªác g√¨ ƒë√≥
            if error == nil {
                
                
                // theo th·ª© t·ª± ta vua ƒëƒÉng k√Ω xong n√≥ ko c√≥ l·ªói thi tta cho n√≥ ƒëƒÉng nh·∫≠p lu√¥n
                Auth.auth().signIn(withEmail: email, password: passwword) { (user, error) in
                    // ko c√≥ n·ªói
                    if error == nil{
                        
                        let alert: UIAlertController = UIAlertController(title: "Th√¥ng B√°o", message: "ƒêƒÉng K√Ω Th√†nh C√¥ng", preferredStyle: UIAlertController.Style.alert)
                       
                        let btn : UIAlertAction = UIAlertAction(title: "ok", style: .default) { (gotochar) in
                            
                            let vc = CharViewController()
                              let nav: UINavigationController = UINavigationController(rootViewController: vc)
                              nav.modalPresentationStyle = .fullScreen
                            self.present(nav,animated: true, completion: nil)
                            
                        }
                        alert.addAction(btn)
                        self.present(alert, animated: true, completion: nil)
                    }
                    
                    
                }
                // khi ƒëƒÉng nh·∫≠p th√†nh c√¥ng
                
                
                // kh·ªüi t·∫°o m·ªôt d∆∞·ªùng d·∫´n ƒë·ªÉ t·∫£i ·∫£nh l√™n firebase
                // khi ƒëƒÉng nh·∫≠p th√†nh c√¥ng ta ƒë√£ c√≥ email c·ªßa n√≥ chuy·ªÅn c√°i email v√†o ƒë√≥ th√¨ s·∫Ω ko trung nhau
                // c√≥ imail c·ªßa user th√¨ n√≥ s·∫Ω c√≥ ·∫£nh c·ªßa user ƒë√≥
                let avartarRef = storageRef.child("images/\(email).jpg")
                // Upload the file to the path "images/rivers.jpg"
                let uploadTask = avartarRef.putData(self.imgDAta, metadata: nil) { (metadata, error) in
                    guard let metadata = metadata else {
                        print("l·ªói up h√¨nh avarta")
                        return
                    }
                    // Metadata contains file metadata such as size, content-type.
                    let size = metadata.size
                    avartarRef.downloadURL { (url, error) in
                        guard let downloadURL = url else {
                            //                        let changeRequest = Auth.auth().currentUser?.createProfileChangeRequest()
                            //                        changeRequest?.displayName = self.textField3.text
                            //                        changeRequest?.photoURL = url
                            //                        changeRequest?.commitChanges { (error) in
                            //                         print("t·∫£i v·ªÅ th√†h c√¥ng")
                            //                        }
                            // cach2
                            // Update a user's profile
                            // ki·ªÉm tra xem ng∆∞·ªõi nh·∫≠p ƒë√£n ƒëƒÉng nh·∫≠p hay chua
                            let users = Auth.auth().currentUser
                            // n·∫øu ƒëƒÉng nh·∫≠p r·ªìi th√¨ m·ªõi x·∫£y ra vi·ªác ƒë∆∞·ªõi ƒë√¢y
                            
                            if let user = users{
                                
                                let changRequest = user.createProfileChangeRequest()
                                
                                // n·∫øu ƒë√£ ƒëƒÉng nh·∫≠p r·ªìi n√≥ s·∫Ω cho ch√∫ng ra l√†m nh·ªØng vi·ªác nh∆∞
                                // thay d·ªïi t√™n hi·ªÉn th·ªã
                                changRequest.displayName = self.textField3.text!
                                
                                // thay ƒë·ªïi ·∫£nh photoUrl th√†nh ƒëo·∫°n url ƒë·ªÉ n√≥ l∆∞u t·∫•m h√¨nh
                                
                                //  up m·ªôt c√°i t·∫•m h√¨nh n√™n ta c·∫ßn th√™m import m·ªôt c√°i th√∫ vi·ªán n·ªØa ƒë√≥
                                //https://firebase.google.com/docs/storage/ios/start
                                //pod 'Firebase/Storage'
                                
                                changRequest.photoURL = url
                            }
                            // ng∆∞·ª£c l·∫°i th√¨ b·∫≠t th√¥ng b√°o c√≥ l·ªói
                            return
                        }
                    }
                }
                uploadTask.resume()
                
                
                
            } else {
                let alert: UIAlertController = UIAlertController(title: "Th√¥ng B√°o", message: "ƒêƒÉng nh·∫≠p kh√¥ng th√†nh c√¥ng \n H√£y ki·ªÉm tra l·∫°i t√†i kho·∫£n c·ªßa b·∫°n \n Xin c·∫£m ∆°n", preferredStyle: UIAlertController.Style.alert)
                let btn: UIAlertAction = UIAlertAction(title: "ok", style: .default, handler: nil)
                alert.addAction(btn)
                self.present(alert, animated: true, completion: nil)
            }
        }
    }
    
    
}
//
//// ch√®n th√™m hai th∆∞ vi·ªán ƒë·ªÉ s·ª≠ d·ª•ng th∆∞ vi√™n ·∫£nh c·ªßa m√°y
//extension MainRegisterViewController: UIImagePickerControllerDelegate,UINavigationControllerDelegate{
//
//    // khi c·ªçn v·ªÅ photo hay camera n√≥ s·∫Ω ch·ªçn v√†o h√†m b√™n d∆∞·ªõi n√†y
//
//    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {
//
//       // info l√† bi·∫øn m√† h√†m tr√™n cung c·∫•p
//        // khi ch√∫ng ta ch·ªçn h√¨nh th√¨ n√≥ s·∫Ω ch·∫£ v·ªÅ cho ch√∫ng ta m·ªôt c√°i info v√† ch√∫ng ra c≈©ng ch∆∞a bi·∫øt n√≥ ki·ªÉu g√¨ th√¨ ta √©p n√≥ v·ªÅ ki·ªÉu image
//        let chooseimage = info[.originalImage] as! UIImage
//        // t·∫°i v√¨ ·∫£nh c·ªßa c√°c m√°y iphone 10 11 co ƒë·ªô ph√¢n giai cao n√™n ta ph·∫£i   gi·∫£m ƒë·ªô ph√¢n gi·∫£i c·ªßa t·∫•m h√¨nh ƒë·ªÉ up l√™n cerver
//        // khi·ªÉm tra k√≠ch th∆∞∆°c t√¢m h√¨nh ƒë√£ ƒë·ªçn b·∫±ng bao nhi√™u
//        let imgvalue = max(chooseimage.size.width,chooseimage.size.height)
//
//        if(imgvalue > 2000){
//            // n·∫øu imgeValue n√†y l·ªõn h∆°n 3000 th√¨ cho ƒë·ªô ph√¢n gi·∫£i t·∫•m h√¨nh gi·∫£m nh·ªè nh·∫•t ta t·∫°o m·ªôt bi·∫øn var imgeData: Data!
//            // d·ªÉ gi·∫£m ƒë·ªç ph√¢n gi·∫£i tao l√†m nh∆∞ sau
//            imgDAta = chooseimage.jpegData(compressionQuality: 0.1)
//        } else  if (imgvalue > 1000){
//            imgDAta = chooseimage.jpegData(compressionQuality: 0.3)
//
//
//        }else{
//            imgDAta = chooseimage.pngData()
//        }
//
//        // khi ch·ªçn xong r·ªìi t√¥i l·∫•y c√°i h√¨nh t√¥i v·ª´a ch·ªçn hi·ªÉn th·ªã ra m√†n h√¨nh lu√¥n
//        imge2.image = UIImage(data: imgDAta)
//
//        // khi ch·ªçn xong r·ªìi th√¨ h·ªôp tho·∫°i c·∫ßn ƒë√≥ng ƒëi
//        dismiss(animated: true, completion: nil)
//
//
//
//    }
//}
extension MainRegisterViewController: UIImagePickerControllerDelegate, UINavigationControllerDelegate {
    
    func  presentPhotoActioSheet() {
        // ki·ªÉu th√¥ng b√°o ƒë·∫©y t·ª´ d∆∞·ªõi l√™n
        let actionsheet = UIAlertController(title: "Th√¥ng b√°o ", message: "B·∫°n s·∫Ω ch·ªçn m·ªôt b·ª©c h√¨nh b·∫°n y√™u th√≠ch", preferredStyle: .actionSheet)
        // c√°ch 1 th√™m nut trong actionSheet
        actionsheet.addAction(UIAlertAction(title: "Cancel", style: .cancel,
                                            handler: nil))
        actionsheet.addAction(UIAlertAction(title: "Camera", style: .default, handler: { [weak self] (camera) in
            self?.presentCamera()
        }))
        actionsheet.addAction(UIAlertAction(title: "Chose Photo", style: .default, handler: { [weak self] (libary) in
            self?.PresentPhotolibary()
        }))
        // c√°ch 2 th√™m nut trong actionSheet
        //        let cancle = UIAlertAction(title: "Cancel", style: .cancel, handler: nil)
        //        actionsheet.addAction(cancle)
        present(actionsheet, animated: true, completion: nil)
    }
    func presentCamera() {
        // n·∫øu c√≥ camera thi truy xu√°t v√†o
        if (UIImagePickerController.isSourceTypeAvailable(.camera)){
            // kh·ªõi t·∫°o bi·∫øn ƒë·ªÉ truy c·∫≠p ƒë·∫øn t√°c v·ª• uiimagePick
            let vc = UIImagePickerController()
            vc.sourceType = .camera
            vc.delegate = self
            vc.allowsEditing = true
            present(vc,animated: true,completion: nil)
        } else {
            let aleart = UIAlertController(title: "Th√¥ng b√°o", message: "ƒëang ch·∫°y tr√™n SIMULATOR l√†m gi c√≥ m√°y ·∫£nh m√† ch·ª•p ", preferredStyle: .alert)
            aleart.addAction(UIAlertAction(title: "Cancel", style: .destructive, handler: nil))
            present(aleart,animated: true, completion: nil)
        }
    }
    func PresentPhotolibary() {
        if (UIImagePickerController.isSourceTypeAvailable(.photoLibrary)){
            let vc = UIImagePickerController()
            vc.sourceType = .photoLibrary
            vc.delegate = self
            vc.allowsEditing = true
            present(vc,animated: true,completion: nil)
        } else {
            print("kh√¥ng c√≥ th∆∞ vi·ªán ·∫£nh")
        }
    }
    // khi ch·ªçn v·ªÅ photo hay camera n√≥ s·∫Ω ch·ªçn v√†o h√†m b√™n d∆∞·ªõi n√†y
    // h√†m ƒë√£ k·∫øt th√∫c ph∆∞∆°ng th·ª©c truy·ªÅn th√¥ng tin
    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {
        /// cach 1 ch·ªçn anh
        // info l√† bi·∫øn m√† h√†m tr√™n cung c·∫•p
        // khi ch√∫ng ta ch·ªçn h√¨nh th√¨ n√≥ s·∫Ω ch·∫£ v·ªÅ cho ch√∫ng ta m·ªôt c√°i info v√† ch√∫ng ra c≈©ng ch∆∞a bi·∫øt n√≥ ki·ªÉu g√¨ th√¨ ta √©p n√≥ v·ªÅ ki·ªÉu image
        let chooseimage = info[.originalImage] as! UIImage
        // t·∫°i v√¨ ·∫£nh c·ªßa c√°c m√°y iphone 10 11 co ƒë·ªô ph√¢n giai cao n√™n ta ph·∫£i   gi·∫£m ƒë·ªô ph√¢n gi·∫£i c·ªßa t·∫•m h√¨nh ƒë·ªÉ up l√™n cerver
        // khi·ªÉm tra k√≠ch th∆∞∆°c t√¢m h√¨nh ƒë√£ ƒë·ªçn b·∫±ng bao nhi√™u
        let imgvalue = max(chooseimage.size.width,chooseimage.size.height)
        
        if(imgvalue > 2000){
            // n·∫øu imgeValue n√†y l·ªõn h∆°n 3000 th√¨ cho ƒë·ªô ph√¢n gi·∫£i t·∫•m h√¨nh gi·∫£m nh·ªè nh·∫•t ta t·∫°o m·ªôt bi·∫øn var imgeData: Data!
            // d·ªÉ gi·∫£m ƒë·ªç ph√¢n gi·∫£i tao l√†m nh∆∞ sau
            imgDAta = chooseimage.jpegData(compressionQuality: 0.1)
        } else  if (imgvalue > 1000){
            imgDAta = chooseimage.jpegData(compressionQuality: 0.3)
        }else{
            imgDAta = chooseimage.pngData()
        }
        let acttyvity : UIActivityIndicatorView = UIActivityIndicatorView()
        acttyvity.color = .systemPink
        acttyvity.frame = self.view.frame
        self.view.addSubview(acttyvity)
        acttyvity.center = self.view.center
        acttyvity.startAnimating()
        
        DispatchQueue.global().async {
            for indct in 1...10000{
                print(indct)
            }
            DispatchQueue.global(qos: .background).asyncAfter(deadline: .now() + 2) {
                DispatchQueue.main.async {
                    // khi ch·ªçn xong r·ªìi t√¥i l·∫•y c√°i h√¨nh t√¥i v·ª´a ch·ªçn hi·ªÉn th·ªã ra m√†n h√¨nh lu√¥n
                    self.imge2.image = UIImage(data: self.imgDAta)
                    acttyvity.stopAnimating()
                }
            }
        }
        // khi ch·ªçn xong r·ªìi th√¨ h·ªôp tho·∫°i c·∫ßn ƒë√≥ng ƒëi
        picker.dismiss(animated: true, completion: nil)
    }
}
